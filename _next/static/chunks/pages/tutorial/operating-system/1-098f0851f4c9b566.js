(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[767],{5045:function(n,e,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/operating-system/1",function(){return i(702)}])},702:function(n,e,i){"use strict";i.r(e);var l=i(1527),s=i(6828),r=i(4579);function t(n){let e=Object.assign({h1:"h1",ul:"ul",li:"li",p:"p",img:"img",code:"code"},(0,r.ah)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{children:"基本的存储器类型"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["随机存储器（random access memory, RAM）","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"动态随机存储器（DRAM，断电后数据不可保存，如寄存器、缓存、内存）"}),"\n",(0,l.jsx)(e.li,{children:"静态随机存储器（SRAM，断电后数据可保存，如硬盘，U 盘）"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"只读存储器（read only memory, ROM）"}),"\n",(0,l.jsx)(e.li,{children:"串行访问存储器：只能按照物理位置先后寻找地址，如磁带"}),"\n"]}),"\n",(0,l.jsx)(e.h1,{children:"计算机中存储器的类型"}),"\n",(0,l.jsx)(e.p,{children:"存储器的主要指标包括：速度、容量、每位价格"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["缓存","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["寄存器","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"MDR（memory data register，主存数据寄存器），用于保存要写入或读取出来的某地址单元的数据"}),"\n",(0,l.jsx)(e.li,{children:"MAR（memory address register，主存地址寄存器），用来保存要读或写数据的存储地址"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"多级 Cache"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.li,{children:"主存（内存）"}),"\n",(0,l.jsx)(e.li,{children:"辅存"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.img,{src:"/images2022-09-25-17-48-31.png",alt:""})}),"\n",(0,l.jsx)(e.h1,{children:"存储器和 CPU 之间的交互"}),"\n",(0,l.jsx)(e.p,{children:"按照功能的划分，存储器之间、存储器和 CPU 之间的线路连接分为数据总线、地址总线和控制总线。"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"数据总线可以在各个存储器之间双向的传递数据"}),"\n",(0,l.jsx)(e.li,{children:"控制总线用来发出控制信号，单条控制总线的信息传递是单向的，如从 CPU 向设备发出的命令，但整体来看是双向的，因为设备也可以向 CPU 发出信号（如中断信号）"}),"\n",(0,l.jsx)(e.li,{children:"地址总线专门用于 CPU 向其他设备输出数据的源地址或目的地址，所以是单向的"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:["? CPU 读地址的指令可以简化为 ",(0,l.jsx)(e.code,{children:"1->R"}),"，即将地址存储到 MAR，这一步指令走的是地址总线；而 MAR->MDR 这一步走的是数据总线。"]}),"\n",(0,l.jsx)(e.h1,{children:"地址数量、存储字长、机器字长"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"地址数量表明了有多少个存储单元，可以由地址总线的条数表示"}),"\n",(0,l.jsx)(e.li,{children:"存储字长表明了单个地址可以存储的字节数"}),"\n",(0,l.jsx)(e.li,{children:"机器字长表明了机器单次运算的指令长度"}),"\n"]}),"\n",(0,l.jsx)(e.h1,{children:"IO 设备"})]})}i(3366),e.default=(0,s.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(t,{...n})}):t(n)},pageOpts:{filePath:"pages/tutorial/operating-system/1.md",route:"/tutorial/operating-system/1",frontMatter:{authors:"sailist",date:"2022-10-16",description:"",draft:!1,title:"1.存储器与IO设备"},headings:[{depth:1,value:"基本的存储器类型",id:"基本的存储器类型"},{depth:1,value:"计算机中存储器的类型",id:"计算机中存储器的类型"},{depth:1,value:"存储器和 CPU 之间的交互",id:"存储器和-cpu-之间的交互"},{depth:1,value:"地址数量、存储字长、机器字长",id:"地址数量存储字长机器字长"},{depth:1,value:"IO 设备",id:"io-设备"}],title:"1.存储器与IO设备"},pageNextRoute:"/tutorial/operating-system/1"})}},function(n){n.O(0,[6828,9774,2888,179],function(){return n(n.s=5045)}),_N_E=n.O()}]);