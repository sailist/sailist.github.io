(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9922],{9174:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/operating-system/8",function(){return s(621)}])},621:function(n,e,s){"use strict";s.r(e);var i=s(1527),t=s(6828),l=s(4579);function r(n){let e=Object.assign({p:"p",code:"code",ul:"ul",li:"li",img:"img",h1:"h1",a:"a"},(0,l.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["进程在 Linux 内核中的进程描述符以 ",(0,i.jsx)(e.code,{children:"task_struct"})," 的数据结构表示，这包括："]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"程序计数器（PC）和栈指针（SP）寄存器"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"通用寄存器"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"浮点寄存器"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"包含 CPU 状态信息的处理器控制寄存器（处理器状态字，Processor Status Word）"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"跟踪进程对 RAM 访问的内存管理寄存器"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["虚拟内存（",(0,i.jsx)(e.code,{children:"task_struct -> mm_struct mm"}),"），包括"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"可执行代码"}),"\n",(0,i.jsx)(e.li,{children:"初始化和未初始化数据"}),"\n",(0,i.jsx)(e.li,{children:"初始程序栈"}),"\n",(0,i.jsx)(e.li,{children:"共享库的可执行代码和数据"}),"\n",(0,i.jsx)(e.li,{children:"堆"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"这些内存因为现代 Unix 采用按需调页的内存分配策略，因此在初始时只有页表，并在访问时通过 MMU 产生的缺页中断来进行按需调页。这一过程在进程复制时还伴随着写时复制等技术。"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:"/images2022-11-16-21-40-28.png",alt:""})}),"\n",(0,i.jsx)(e.h1,{children:"Reference"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://blog.csdn.net/LF_2016/article/details/54346121",children:"https://blog.csdn.net/LF_2016/article/details/54346121"})}),"\n"]})]})}s(3366),e.default=(0,t.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(r,{...n})}):r(n)},pageOpts:{filePath:"pages/tutorial/operating-system/8.md",route:"/tutorial/operating-system/8",frontMatter:{authors:"sailist",date:"2022-11-16",description:"",draft:!1,title:"4.3.进程资源"},headings:[{depth:1,value:"Reference",id:"reference"}],title:"4.3.进程资源"},pageNextRoute:"/tutorial/operating-system/8"})}},function(n){n.O(0,[6828,9774,2888,179],function(){return n(n.s=9174)}),_N_E=n.O()}]);