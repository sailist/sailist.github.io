(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7984],{7063:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/operating-system/7",function(){return t(8088)}])},8088:function(e,n,t){"use strict";t.r(n);var i=t(1527),s=t(6828),l=t(4579);function r(e){let n=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",input:"input",a:"a",img:"img",code:"code"},(0,l.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{}),"\n",(0,i.jsx)(n.p,{children:"Linux 进程的不可中断休眠与可中断休眠状态"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.a,{href:"https://blog.csdn.net/wen6955/article/details/124585759",children:"https://blog.csdn.net/wen6955/article/details/124585759"})]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{children:"Linux 下查看进程状态"}),"\n",(0,i.jsx)(n.p,{children:"top 命令的 S 列（State）标记了进程的状态。其中："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"R 是 Running 或 Runnable 的缩写，表示进程在 CPU 的就绪队列中，正在运行或者正在等待运行。"}),"\n",(0,i.jsx)(n.li,{children:"D 是 Disk Sleep 的缩写，也就是不可中断状态睡眠（Uninterruptible Sleep），一般表示进程正在跟硬件交互，并且交互过程不允许被其他进程或中断打断。"}),"\n",(0,i.jsx)(n.li,{children:"S 是 Interruptible Sleep 的缩写，也就是可中断状态睡眠，表示进程因为等待某个事件而被系统挂起。当进程等待的事件发生时，它会被唤醒并进入 R 状态。"}),"\n",(0,i.jsx)(n.li,{children:"Z 是 Zombie 的缩写，它表示僵尸进程，也就是进程实际上已经结束了，但是父进程还没有回收它的资源（比如进程的描述符、PID 等）。"}),"\n",(0,i.jsx)(n.li,{children:"I 是 Idle 的缩写，也就是空闲状态，用在不可中断睡眠的内核线程上。前面说了，硬件交互导致的不可中断进程用 D 表示，但对某些内核线程来说，它们有可能实际上并没有任何负载，用 Idle 正是为了区分这种情况。要注意，D 状态的进程会导致平均负载升高， I 状态的进程却不会。"}),"\n",(0,i.jsx)(n.li,{children:"T 或者 t，是 Stopped 或 Traced 的缩写，表示进程处于暂停或者跟踪状态。"}),"\n",(0,i.jsx)(n.li,{children:"X，是 Dead 的缩写，表示进程已经消亡，top 或者 ps 命令中不会看到它。"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/images2022-11-08-09-42-57.png",alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["可以通过 ",(0,i.jsx)(n.code,{children:"man ps"})," 查看进程状态"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/images2022-11-08-09-45-31.png",alt:""})}),"\n",(0,i.jsx)(n.h1,{children:"Reference"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learnku.com/articles/39851",children:"https://learnku.com/articles/39851"})}),"\n"]})]})}t(3366),n.default=(0,s.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)},pageOpts:{filePath:"pages/tutorial/operating-system/7.md",route:"/tutorial/operating-system/7",frontMatter:{authors:"sailist",date:"2022-11-16",description:"",draft:!1,title:"4.2.进程、线程、协程"},headings:[{depth:1,value:"",id:""},{depth:1,value:"Linux 下查看进程状态",id:"linux-下查看进程状态"},{depth:1,value:"Reference",id:"reference"}],title:"4.2.进程、线程、协程"},pageNextRoute:"/tutorial/operating-system/7"})}},function(e){e.O(0,[6828,9774,2888,179],function(){return e(e.s=7063)}),_N_E=e.O()}]);