(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8182],{4290:function(n,e,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/computer-network/5",function(){return i(4693)}])},4693:function(n,e,i){"use strict";i.r(e);var l=i(1527),s=i(6828),r=i(4579);function h(n){let e=Object.assign({h1:"h1",p:"p",img:"img",ul:"ul",li:"li",em:"em",code:"code",blockquote:"blockquote",a:"a"},(0,r.ah)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{children:"网络层总览"}),"\n",(0,l.jsx)(e.p,{children:"网络层上看不到来自链路层的帧，所有网络层处理的数据形式都为网络层协议定义的数据形式。（链路层会将数据解帧后传递给网络层）。"}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.img,{src:"/images2022-10-05-15-22-50.png",alt:""})}),"\n",(0,l.jsx)(e.p,{children:"网络层和链路层的主要区别在："}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"网络层定义了逻辑上的地址，链路层定义了物理上的地址。"}),"\n",(0,l.jsx)(e.li,{children:"链路层解决了两个存在物理连接的设备之间的传输问题。网络层解决了两个存在逻辑链接（通过多个物理设备后有链接）的设备之间的传输问题。"}),"\n",(0,l.jsx)(e.li,{children:"网络层发送的 IP 数据包的源地址和目的地址在传输到目标设备前不会变，而在数据包注入到下层链路层后，帧的 MAC 地址会一直随着两台物理设备进行更改。"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.img,{src:"/images2022-10-05-15-20-41.png",alt:""})}),"\n",(0,l.jsxs)(e.p,{children:["最后，ARP 和 RARP 协议建立从 IP 地址对应的 ",(0,l.jsx)(e.em,{children:"虚电路"})," 到实际物理电路的映射关系，使得上述描述的信息传递过程能够最终实现。"]}),"\n",(0,l.jsx)(e.h1,{children:"路由协议"}),"\n",(0,l.jsxs)(e.p,{children:["一个路由表中存储着一个数据集和，每一条记录主要包含 ",(0,l.jsx)(e.code,{children:"目的网络地址, 子网掩码, 下一跳地址"})," 三个信息。"]}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"此外还有其他元数据，如参考计数、使用情况、标志，用于拥塞控制等算法。"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.img,{src:"/images2022-10-05-21-37-17.png",alt:""})}),"\n",(0,l.jsx)(e.p,{children:"路由器转发分组的算法如下："}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"从 IP 数据报中提取目的地址 D；"}),"\n",(0,l.jsx)(e.li,{children:"对路由器直接相连的网络进行子网掩码的判断。具体是将各个网络的子网掩码和 D 相与求出网络号，判断网络地址和 D 的网络号是否匹配。如果存在匹配的网络则直接交付给该网络；"}),"\n",(0,l.jsx)(e.li,{children:"如果不匹配，但路由表中有目的地址为 D 的特定主机路由，则交付给该路由记录（目的地址，子网掩码，下一跳地址）中指明的下一跳路由器；"}),"\n",(0,l.jsx)(e.li,{children:"如果不存在特定主机路由，则逐个对路由表中的每一项进行子网掩码匹配的过程，如果存在匹配的记录则交付给记录中指明的下一跳路由器；"}),"\n",(0,l.jsx)(e.li,{children:"如果均不匹配，但路由表中有默认路由，则转发给默认路由；"}),"\n",(0,l.jsx)(e.li,{children:"如果不存在默认路由，报告转发分组出错。"}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"路由表上的记录需要保证能将任意设备上的 IP 数据报转发给任意的目的主机（可以通过多次间接交付）。为了将路由器中路由表项的数量维持在一定规模内，网络层的各个协议都对此进行了优化，这包括："}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"路由表指记录到目标网络的转发路径，而不记录到具体主机的转发路径"}),"\n",(0,l.jsx)(e.li,{children:"对 IP 地址划分的优化（如 CIDR）"}),"\n",(0,l.jsxs)(e.li,{children:["尽可能理想的路由算法，见",(0,l.jsx)(e.a,{href:"./2.3.%E8%B7%AF%E7%94%B1%E7%AE%97%E6%B3%95",children:"2.3 路由算法"})]}),"\n"]}),"\n",(0,l.jsx)(e.h1,{children:"IP 协议"}),"\n",(0,l.jsx)(e.p,{children:"IP 协议是一种网络层协议，用于给每台设备定义一个逻辑上的唯一地址。在网络层的报文只能看到 IP 地址。"}),"\n",(0,l.jsxs)(e.p,{children:["详见 ",(0,l.jsx)(e.a,{href:"./2.1.IP%E5%8D%8F%E8%AE%AE",children:"2.1 IP 协议"})]}),"\n",(0,l.jsx)(e.h1,{children:"ARP/RARP 协议"}),"\n",(0,l.jsx)(e.p,{children:"ARP（Address Resolution Protocol，地址解析协议） 是一种网络层协议。该协议通过解析网络层地址来找寻数据链路层地址。"}),"\n",(0,l.jsx)(e.p,{children:"由于网络层只能看到目标机器的 IP 地址，而无法得知目标机器的 Mac 地址，因此当数据包从网络层注入到链路层时，就需要知道数据应该向哪个路由传输。此时 ARP 协议会构建一个包含了目标机器 IP 地址的数据包广播出去，每个路由都会接收到。当通向目标机器的路由接收到这个广播包后，就会响应该 ARP 请求。"}),"\n",(0,l.jsx)(e.p,{children:"ARP 的请求和相应中都会包括源机器的 IP 和 MAC 和目标机器的 IP 和 MAC 这四个字段，但在请求中，目标机器的 MAC 字段是全 0 ，表示留空。"}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"https://zhuanlan.zhihu.com/p/28771785",children:"https://zhuanlan.zhihu.com/p/28771785"})," > ",(0,l.jsx)(e.a,{href:"https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE",children:"https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE"})]}),"\n"]}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsx)(e.p,{children:"基于功能来考虑，ARP 是链路层协议（因为功能是获取 Mac 地址，用于链路层）；基于分层/包封装来考虑，ARP 是网络层协议。（此方法对于 ICMP 协议同样管用）"}),"\n"]}),"\n",(0,l.jsx)(e.h1,{children:"ICMP 协议"}),"\n",(0,l.jsxs)(e.p,{children:["见 ",(0,l.jsx)(e.a,{href:"./2.2.ICMP%E5%8D%8F%E8%AE%AE",children:"2.2 ICMP 协议"})]})]})}i(3366),e.default=(0,s.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(h,{...n})}):h(n)},pageOpts:{filePath:"pages/tutorial/computer-network/5.md",route:"/tutorial/computer-network/5",frontMatter:{authors:"sailist",date:"2022-10-06",description:"",draft:!1,title:"2.网络层"},headings:[{depth:1,value:"网络层总览",id:"网络层总览"},{depth:1,value:"路由协议",id:"路由协议"},{depth:1,value:"IP 协议",id:"ip-协议"},{depth:1,value:"ARP/RARP 协议",id:"arprarp-协议"},{depth:1,value:"ICMP 协议",id:"icmp-协议"}],title:"2.网络层"},pageNextRoute:"/tutorial/computer-network/5"})}},function(n){n.O(0,[6828,9774,2888,179],function(){return n(n.s=4290)}),_N_E=n.O()}]);