(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7161],{6212:function(n,e,l){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/cpp/8",function(){return l(3121)}])},3121:function(n,e,l){"use strict";l.r(e);var s=l(1527),i=l(6828),a=l(4579);function c(n){let e=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",code:"code",h2:"h2",pre:"pre",span:"span"},(0,a.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{children:"内存模型"}),"\n",(0,s.jsx)(e.p,{children:"仅堆由程序员管理，其余均由程序自身管理。"}),"\n",(0,s.jsx)(e.h1,{children:"内存类型"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"栈：函数调用时（包括 main）所有局部变量、函数参数、返回数据、返回地址均由栈空间分配。"}),"\n",(0,s.jsx)(e.li,{children:"全局区：存放全局变量、静态数据、常量。"}),"\n",(0,s.jsx)(e.li,{children:"文字常量区：特殊的，常量字符串存放在文字常量区。"}),"\n",(0,s.jsx)(e.li,{children:"程序代码区：存放函数体的二进制代码"}),"\n",(0,s.jsxs)(e.li,{children:["堆：",(0,s.jsx)(e.code,{children:"malloc"})," 等创建的内存空间。由程序员管理。分配方式类似于栈（上一块内存地址指向下一块内存地址，地址之间非连续）"]}),"\n"]}),"\n",(0,s.jsx)(e.h1,{children:"自动变量 & 非自动变量"}),"\n",(0,s.jsx)(e.p,{children:"自动的意思就是在一定的作用域内会自动消亡，普通的局部变量都是自动变量。非自动就是不会自己释放内存，每次访问改变值后，值会一直保存在那里。"}),"\n",(0,s.jsx)(e.p,{children:"非自动变量有两种，一种是全局变量（在非函数内定义的），一种是静态变量（在函数内加了 static 关键字的）"}),"\n",(0,s.jsx)(e.h1,{children:"生命周期"}),"\n",(0,s.jsx)(e.h2,{id:"左值--右值",children:"左值 & 右值"}),"\n",(0,s.jsx)(e.p,{children:"在 C++ 中可以取地址的、有名字的就是左值，反之，不能取地址的、没有名字的就是右值（将亡值或纯右值）。左值一定在内存中，右值有可能在内存中也有可能在寄存器中。"}),"\n",(0,s.jsx)(e.p,{children:"左值（lvalue）是有名字的变量，以下变量形式均为不同形式的左值"}),"\n",(0,s.jsx)(e.pre,{"data-language":"text","data-theme":"default",children:(0,s.jsxs)(e.code,{"data-language":"text","data-theme":"default",children:[(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"int a;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"int &b;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"const int c;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"const int &d;"})})]})}),"\n",(0,s.jsx)(e.p,{children:"右值包括将亡值（xvalue，eXpiring value）和纯右值（rvalue）："}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"将亡值"}),"\n",(0,s.jsx)(e.li,{children:"纯右值"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"左值引用--右值引用",children:"左值引用 & 右值引用"}),"\n",(0,s.jsx)(e.p,{children:"引用是一种别名。左值引用是具名变量值的别名，而右值引用则是不具名（匿名）变量的别名。"}),"\n",(0,s.jsx)(e.pre,{"data-language":"c++","data-theme":"default",children:(0,s.jsxs)(e.code,{"data-language":"c++","data-theme":"default",children:[(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"int getdata(int &&num)"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    cout << num;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    num += 10;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    return num;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"void main()"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    int a = 5;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"    cout << getdata(a + 1) << endl;"})}),"\n",(0,s.jsx)(e.span,{className:"line",children:(0,s.jsx)(e.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})})]})}l(3366),e.default=(0,i.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)},pageOpts:{filePath:"pages/tutorial/cpp/8.md",route:"/tutorial/cpp/8",frontMatter:{authors:"sailist",date:"2022-10-25",description:"",draft:!1,title:"内存模型"},headings:[{depth:1,value:"内存模型",id:"内存模型"},{depth:1,value:"内存类型",id:"内存类型"},{depth:1,value:"自动变量 & 非自动变量",id:"自动变量--非自动变量"},{depth:1,value:"生命周期",id:"生命周期"},{depth:2,value:"左值 & 右值",id:"左值--右值"},{depth:2,value:"左值引用 & 右值引用",id:"左值引用--右值引用"}],title:"内存模型"},pageNextRoute:"/tutorial/cpp/8"})}},function(n){n.O(0,[6828,9774,2888,179],function(){return n(n.s=6212)}),_N_E=n.O()}]);