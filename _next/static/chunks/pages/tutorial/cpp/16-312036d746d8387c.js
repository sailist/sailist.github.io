(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5428],{5218:function(n,i,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/cpp/16",function(){return e(1540)}])},1540:function(n,i,e){"use strict";e.r(i);var t=e(1527),l=e(6828),c=e(4579);function s(n){let i=Object.assign({h1:"h1",ul:"ul",li:"li"},(0,c.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{children:"gcc 编译过程"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["预处理：条件编译，头文件包含，宏替换的处理。","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"对全部的 #define 进行宏展开、处理 #ifdef、递归处理 #include"}),"\n",(0,t.jsx)(i.li,{children:"删除注释"}),"\n",(0,t.jsx)(i.li,{children:"添加行号和文件标识"}),"\n",(0,t.jsx)(i.li,{children:"保留 #progma"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.li,{children:"编译： 预处理后的文件通过词法分析，语法分析，语义分析及优化后转换为汇编语言。"}),"\n",(0,t.jsx)(i.li,{children:"汇编：将汇编语言转化为机器指令，生成目标（target）文件。"}),"\n",(0,t.jsx)(i.li,{children:"链接：链接目标文件，解决符号依赖，库依赖关系，生成可执行程序。"}),"\n"]}),"\n",(0,t.jsx)(i.h1,{children:"Linux & Mac & Windows"})]})}e(3366),i.default=(0,l.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,c.ah)(),n.components);return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(s,{...n})}):s(n)},pageOpts:{filePath:"pages/tutorial/cpp/16.md",route:"/tutorial/cpp/16",frontMatter:{authors:"sailist",date:"2022-11-09",description:"",draft:!1,title:"编译器"},headings:[{depth:1,value:"gcc 编译过程",id:"gcc-编译过程"},{depth:1,value:"Linux & Mac & Windows",id:"linux--mac--windows"}],title:"编译器"},pageNextRoute:"/tutorial/cpp/16"})}},function(n){n.O(0,[6828,9774,2888,179],function(){return n(n.s=5218)}),_N_E=n.O()}]);