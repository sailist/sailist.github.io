(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6191],{33:function(n,l,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tutorial/cpp/6",function(){return i(5919)}])},5919:function(n,l,i){"use strict";i.r(l);var s=i(1527),e=i(6828),c=i(4579);function r(n){let l=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",input:"input",a:"a",code:"code"},(0,c.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.h1,{children:"Cpp 速查表"}),"\n",(0,s.jsx)(l.p,{children:"假设已经熟练掌握至少一门语言，同时系统的了解面向对象、操作系统。"}),"\n",(0,s.jsx)(l.h1,{children:"目录"}),"\n",(0,s.jsxs)(l.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(l.li,{className:"task-list-item",children:[(0,s.jsx)(l.input,{type:"checkbox",disabled:!0})," ","所有特性：",(0,s.jsx)(l.a,{href:"https://en.cppreference.com/w/cpp/language",children:"https://en.cppreference.com/w/cpp/language"})]}),"\n"]}),"\n",(0,s.jsx)(l.h1,{children:"基础"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["数据类型","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"基础数据类型"}),"\n",(0,s.jsx)(l.li,{children:"数组"}),"\n",(0,s.jsx)(l.li,{children:"结构体"}),"\n",(0,s.jsx)(l.li,{children:"union"}),"\n",(0,s.jsxs)(l.li,{children:["特殊数据类型","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"字符串类型"}),"\n",(0,s.jsxs)(l.li,{children:["指针类型","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"函数指针"}),"\n",(0,s.jsx)(l.li,{children:"空指针、野指针、nullptr、nullptr_t"}),"\n",(0,s.jsx)(l.li,{children:"数组和指针"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"引用类型"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"自动类型推导：auto、decltype"}),"\n",(0,s.jsx)(l.li,{children:"初始化"}),"\n",(0,s.jsx)(l.li,{children:"类型转换"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["元编程","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["模板 template","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"模板类"}),"\n",(0,s.jsx)(l.li,{children:"模板函数"}),"\n",(0,s.jsx)(l.li,{children:"偏特化、全特化"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"常量元编程 constexp"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["数据的操作","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["一元操作符","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:(0,s.jsx)(l.code,{children:"&，*,..."})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["二元操作符","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:(0,s.jsx)(l.code,{children:"+-*/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["变量描述符","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"const、static、extern、volatile"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["分支、循环逻辑","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"基础语法"}),"\n",(0,s.jsx)(l.li,{children:"if/switch 语法增强（C++11）"}),"\n",(0,s.jsxs)(l.li,{children:["有范围的 for 循环语法增强（C++11）","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"联合 auto"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["函数","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["函数类型","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["函数参数","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"将各种类型（数组、指针、引用）作为入参的注意事项"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"变长函数"}),"\n",(0,s.jsx)(l.li,{children:"函数多态"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"追踪返回类型"}),"\n",(0,s.jsx)(l.li,{children:"匿名函数 lambda"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["面向对象","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"多态"}),"\n",(0,s.jsxs)(l.li,{children:["类","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["默认函数","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:[(0,s.jsx)(l.code,{children:"default"}),",",(0,s.jsx)(l.code,{children:"delete"})," 语义"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["构造函数","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"委派构造函数"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["操作符重载","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"返回值？"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["构造函数","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"深拷贝浅拷贝：当类中有指针变量、动态内存分配等，需要显示重载赋值/拷贝运算符。"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["继承","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"final、override、virtual 语义"}),"\n",(0,s.jsx)(l.li,{children:"内存模型（虚函数表）"}),"\n",(0,s.jsx)(l.li,{children:"多重继承"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"友元（friend 语义）"}),"\n",(0,s.jsxs)(l.li,{children:["权限（public、protected、private）","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"继承权限"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["异常","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"noexcept"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["断言","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"静态断言"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["编译器","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"预处理"}),"\n",(0,s.jsx)(l.li,{children:"编译"}),"\n",(0,s.jsx)(l.li,{children:"汇编"}),"\n",(0,s.jsx)(l.li,{children:"链接"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["内存模型","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"段模型"}),"\n",(0,s.jsxs)(l.li,{children:["堆内存管理","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"new、delete"}),"\n",(0,s.jsx)(l.li,{children:"malloc、..."}),"\n",(0,s.jsx)(l.li,{children:"智能指针"}),"\n",(0,s.jsx)(l.li,{children:"垃圾回收"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(l.li,{children:"生命周期：move 和 forward 语义"}),"\n",(0,s.jsx)(l.li,{children:"虚函数表"}),"\n",(0,s.jsx)(l.li,{children:"构造、析构"}),"\n",(0,s.jsx)(l.li,{children:"创建、销毁"}),"\n",(0,s.jsx)(l.li,{children:"POD"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["模块","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"import/include"}),"\n",(0,s.jsxs)(l.li,{children:["using/namespace","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"inline"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["进程与线程","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"多线程单例模式"}),"\n",(0,s.jsx)(l.li,{children:"局部线程变量"}),"\n",(0,s.jsx)(l.li,{children:"原子化操作（C++11）"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["C++ 标准库","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:(0,s.jsx)(l.code,{children:"<iostream>"})}),"\n",(0,s.jsx)(l.li,{children:"tuple"}),"\n",(0,s.jsx)(l.li,{children:"vector"}),"\n",(0,s.jsx)(l.li,{children:"string"}),"\n",(0,s.jsx)(l.li,{children:"bitset"}),"\n",(0,s.jsx)(l.li,{children:"auto_ptr -> shared_ptr/unique_ptr/weak_ptr"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(l.li,{children:["总结","\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:"C++11/14...新特性"}),"\n"]}),"\n"]}),"\n"]})]})}i(3366),l.default=(0,e.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:l}=Object.assign({},(0,c.ah)(),n.components);return l?(0,s.jsx)(l,{...n,children:(0,s.jsx)(r,{...n})}):r(n)},pageOpts:{filePath:"pages/tutorial/cpp/6.md",route:"/tutorial/cpp/6",frontMatter:{authors:"sailist",date:"2022-11-10",description:"",draft:!1,title:"README"},headings:[{depth:1,value:"Cpp 速查表",id:"cpp-速查表"},{depth:1,value:"目录",id:"目录"},{depth:1,value:"基础",id:"基础"}],title:"README"},pageNextRoute:"/tutorial/cpp/6"})}},function(n){n.O(0,[6828,9774,2888,179],function(){return n(n.s=33)}),_N_E=n.O()}]);